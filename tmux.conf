######################################################################
## BASICS                                                           ##
######################################################################
unbind C-b
set -g prefix C-a
# bind-key -r C-s send-prefix

## Allows us to use C-a a <command> to send commands to a TMUX session inside
## another TMUX session
bind-key a send-prefix

## set scrollback history to 10000 (10k)
set -g history-limit 10000

## Allows for faster key repetition
set -s escape-time 0

## terminal colors
# set-option -g default-terminal "xterm-256color"
# set -ga terminal-overrides ",xterm-256color:Tc"

## listen to alerts from all windows
set -g bell-action any

## Open ~/.tmux.conf in vim and reload settings on quit
unbind e
bind e new-window -n '~/.tmux.conf' "sh -c 'vim ~/.tmux.conf && tmux source ~/.tmux.conf'"

## reload config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

## mouse
set -g mouse on

######################################################################
## STATUS LINE                                                      ##
######################################################################
set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 100
set -g status-left '#h'
set-option -g status-right "#(date '+%Y.%m.%d %H:%M')"

## set color for status bar
set-option -g status-bg                 colour235       #base02
set-option -g status-fg                 yellow          #yellow
# set-option -g status-attr               default

## pane border
set-option -g pane-border-fg            colour240       #base02
set-option -g pane-active-border-fg     yellow

######################################################################
## WINDOWS                                                          ##
######################################################################
## open new windows in the current path
bind c new-window -c "#{pane_current_path}"
bind-key b break-pane -d
set -g renumber-windows on

## easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window

## Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

## Rather than constraining window size to the maximum size of any client
## connected to the *session*, constrain window size to the maximum size of any
## super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

######################################################################
## PANES                                                            ##
######################################################################
## splitters
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'

## pane navigation
bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R

## quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

## Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

## Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

######################################################################
## COPY/PASTE                                                       ##
######################################################################
## copy / paste in osx
set-option -g default-command "reattach-to-user-namespace -l zsh"

## Use vim keybindings in copy mode
## http://blog.sanctum.geek.nz/vi-mode-in-tmux/
## C-[ enters copy mode, Enter ends copy mode
setw -g mode-keys vi

## Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"

## Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

## Vi copypaste
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

